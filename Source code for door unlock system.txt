#include<avr/io.h>
#include<avr/eeprom.h>
#include<util/delay.h>

#define lcdport PORTA    //LCD IS CONNECTED TO PORTA

#define signal PORTB     //SIGNALS TO PORTB

#define en PB2 // define enable signal pin

#define rw PB1         // define Read/Write signal pin

#define rs PB0     // define Register/Select  pin
char password[1];
char lock[0];
char key;

char keycheck();

char scankey();

void lcdcmd(unsigned char cmd);

void lcdint();
unsigned char  lcd_read();

void lcddata(unsigned char data);
void send_a_command(unsigned char command);

void send_a_character(unsigned char character);

void send_a_string(char *string_of_characters);
int main()

{

DDRA=0xff;   // PORTA is taken as output port
DDRB=0x0f;   // PORTB is taken as
DDRD=0xf0;   //

char key;

lcdint();
lcddata('E');
lcddata('N');
lcddata('T');
lcddata('E');
lcddata('R');
lcddata(' ');
lcddata('P');
lcddata('A');
lcddata('S');
lcddata('S');
lcddata('W');
lcddata('O');
lcddata('R');
lcddata('D');
lcdcmd(0xC0);  //  force cursor to start from 2nd line

for(int i=0;i<3;i++) // 3 digit password is set
{

key=scankey();
_delay_ms(1000);

lcddata(key);
password[i]=key;
}
lcdcmd(0x01); // clear display
if((password[0]=='7')&&(password[1]=='9')&&password[2]=='4') // password is set as 794
{lcddata('C');
lcddata('O');
lcddata('R');
lcddata('R');
lcddata('E');
lcddata('C');
lcddata('T');
lcddata(' ');
lcddata('P');
lcddata('A');
lcddata('S');
lcddata('S');
lcddata('W');
lcddata('O');
lcddata('R');
lcddata('D');
DDRC=0xff;       //PORTC IS TAKEN AS OUTPUT PORT
PORTC=0x02;       // return 1
_delay_ms(3000);
PORTC=0x00;
lcdcmd(0x01);    // clear display
lcdcmd(0x80);    //curser at home position
lcddata('L');
lcddata('O');
lcddata('C');
lcddata('K');
lcddata('?');
lcddata(' ');
lcddata('P');
lcddata('R');
lcddata('E');
lcddata('S');
lcddata('S');
lcddata(' ');
lcddata('1');
lcdcmd(0xC0);       // force cursor to start from 2nd line
key=scankey();
_delay_ms(1000);

lcddata(key);
lock[0]=key;
if(lock[0]=='1')         //if we press key as 1 it will be locked
{DDRC=0xff;
PORTC=0x01;
_delay_ms(3000);
PORTC=0x00;
lcdcmd(0x01);
lcddata('L');
lcddata('O');
lcddata('C');
lcddata('K');
lcddata('E');
lcddata('D');
_delay_ms(1000);
return main();
}
}
else
lcddata('W');
lcddata('R');
lcddata('O');
lcddata('N');
lcddata('G');
lcddata(' ');
lcddata('P');
lcddata('A');
lcddata('S');
lcddata('S');
lcddata('W');
lcddata('O');
lcddata('R');
lcddata('D');
return main();
}

char scankey()

{

char key='a';
while(key=='a')

{

key=keycheck();
}

return key;

}

char keycheck()

{

PORTD=0b11101111;

_delay_ms(10);

if((PIND&0b00000001)==0)

{
return '1';
}

if((PIND&0b00000010)==0)

{

return '4';

}

if((PIND&0b00000100)==0)

{

return '7';

}
if((PIND&0b00001000)==0)
{
return '*';
}

PORTD=0b11011111;

_delay_ms(10);

if((PIND&0b00000001)==0)

{

return '2';

}

if((PIND&0b00000010)==0)

{

return '5';

}

if((PIND&0b00000100)==0)

{

return '8';

}
if((PIND&0b00001000)==0)
{
return '0';
}

PORTD=0b10111111;

_delay_ms(10);

if((PIND&0b00000001)==0)

{

return '3';

}

if((PIND&0b00000010)==0)

{

return '6';

}

if((PIND&0b00000100)==0)

{

return '9';

}
if((PIND&0b00001000)==0)
{
return'#';
}

PORTD=0b01111111;

_delay_ms(10);

if((PIND&0b00000001)==0)

{

return '*';

}

if((PIND&0b00000010)==0)

{

return 'B';

}

if((PIND&0b00000100)==0)

{

return 'C';

}
if((PIND&0b00001000)==0)
{
return'D';
}

return 'a';

}

void lcdint()

{

lcdcmd(0x38);           // initialization of 16x2 LCD in 8 bit mode

_delay_ms(1);

lcdcmd(0x01);           // clear display

_delay_ms(1);

lcdcmd(0x0F);

_delay_ms(100);
lcdcmd(0x82);      // set cursor position on display
_delay_ms(100);
lcdcmd(0x89);       // set cursor position on display
_delay_ms(10);
lcdcmd(0x01);           // clear display
}

void lcdcmd(unsigned char x)

{

lcdport=x;

signal=(0<<rs)|(0<<rw)|(1<<en);      //rs=0, command register, rw=0 write operation, en= enable pulse

_delay_ms(1);

signal=(0<<rs)|(0<<rw)|(0<<en);       //rs=0, command register, rw=0 write operation, en= enable pulse

_delay_ms(50);

}

void lcddata(unsigned char data)

{

lcdport= data;

signal= (1<<rs)|(0<<rw)|(1<<en);      // rs=1 data reg. , rw=0 write operation, enable pulse

_delay_ms(1);

signal= (1<<rs)|(0<<rw)|(0<<en);        // rs=1 data reg. , rw=0 write operation, enable pulse

_delay_ms(50);

}
unsigned char  lcd_read()
{

signal= (1<<rs)|(1<<rw)|(1<<en);         // rs=1 data reg. , rw=1 write operation, enable pul
_delay_ms(1);

signal= (1<<rs)|(1<<rw)|(0<<en);          // rs=1 data reg. , rw=1 write operation, enable pulse

_delay_ms(50);
}


